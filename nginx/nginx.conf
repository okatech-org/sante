events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # ============================================
    # LOGGING
    # ============================================
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log warn;

    # ============================================
    # PERFORMANCE
    # ============================================
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # ============================================
    # GZIP COMPRESSION
    # ============================================
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript 
               application/json application/javascript application/xml+rss;

    # ============================================
    # UPSTREAM (Backend)
    # ============================================
    upstream neural_backend {
        least_conn;
        server neural-server:3000;
        # Pour scaling, ajouter d'autres serveurs:
        # server neural-server-2:3000;
        # server neural-server-3:3000;
    }

    # ============================================
    # RATE LIMITING
    # ============================================
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth_limit:10m rate=5r/m;
    limit_conn_zone $binary_remote_addr zone=conn_limit:10m;

    # ============================================
    # HTTP REDIRECT TO HTTPS
    # ============================================
    server {
        listen 80;
        server_name sante.ga www.sante.ga *.sante.ga;

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        location / {
            return 301 https://$host$request_uri;
        }
    }

    # ============================================
    # HTTPS SERVER
    # ============================================
    server {
        listen 443 ssl http2;
        server_name sante.ga www.sante.ga;

        # ============================================
        # SSL CERTIFICATE
        # ============================================
        ssl_certificate /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;
        
        # SSL Configuration (Modern)
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # ============================================
        # SECURITY HEADERS
        # ============================================
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

        # ============================================
        # API ROUTES
        # ============================================
        location /api/ {
            # Rate limiting
            limit_req zone=api_limit burst=20 nodelay;
            limit_conn conn_limit 10;

            # Proxy to backend
            proxy_pass http://neural_backend;
            proxy_http_version 1.1;
            
            # Headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # WebSocket support
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # ============================================
        # AUTH ROUTES (Stricter rate limit)
        # ============================================
        location /api/auth/ {
            limit_req zone=auth_limit burst=5 nodelay;
            limit_conn conn_limit 5;

            proxy_pass http://neural_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Longer timeout pour password reset
            proxy_connect_timeout 120s;
            proxy_send_timeout 120s;
            proxy_read_timeout 120s;
        }

        # ============================================
        # HEALTH CHECK (No rate limit)
        # ============================================
        location /health {
            proxy_pass http://neural_backend;
            access_log off;
        }

        location /metrics {
            proxy_pass http://neural_backend;
            access_log off;
        }

        # ============================================
        # FRONTEND STATIC FILES
        # ============================================
        location / {
            root /usr/share/nginx/html;
            try_files $uri $uri/ /index.html;
            
            # Cache static assets
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
            }

            # Don't cache HTML
            location ~* \.html?$ {
                expires -1;
                add_header Cache-Control "no-cache, no-store, must-revalidate";
            }
        }

        # ============================================
        # DENY ACCESS TO SENSITIVE FILES
        # ============================================
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
}
