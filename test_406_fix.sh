#!/bin/bash

# ============================================
# SCRIPT DE TEST - CORRECTION ERREUR 406
# ============================================
# Script pour tester la correction de l'erreur 406 du dashboard professionnel
# Date: 28/10/2025
# Projet: SANTE.GA

echo "üîß Test de la correction de l'erreur 406 - Dashboard Professionnel SANTE.GA"
echo "=================================================================="

# Couleurs pour les messages
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fonction pour afficher les messages color√©s
print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# V√©rifier que nous sommes dans le bon r√©pertoire
if [ ! -f "package.json" ]; then
    print_error "Ce script doit √™tre ex√©cut√© depuis la racine du projet SANTE.GA"
    exit 1
fi

print_status "V√©rification de l'environnement..."

# V√©rifier Node.js
if ! command -v node &> /dev/null; then
    print_error "Node.js n'est pas install√©"
    exit 1
fi

NODE_VERSION=$(node --version)
print_success "Node.js version: $NODE_VERSION"

# V√©rifier npm
if ! command -v npm &> /dev/null; then
    print_error "npm n'est pas install√©"
    exit 1
fi

NPM_VERSION=$(npm --version)
print_success "npm version: $NPM_VERSION"

# V√©rifier que les fichiers de correction existent
print_status "V√©rification des fichiers de correction..."

FILES_TO_CHECK=(
    "fix_professional_profiles_rls.sql"
    "src/hooks/useProfessionalProfile.ts"
    "src/pages/DashboardProfessional.tsx"
)

for file in "${FILES_TO_CHECK[@]}"; do
    if [ -f "$file" ]; then
        print_success "‚úì $file existe"
    else
        print_error "‚úó $file manquant"
        exit 1
    fi
done

# V√©rifier les d√©pendances
print_status "V√©rification des d√©pendances..."

if [ ! -d "node_modules" ]; then
    print_warning "node_modules n'existe pas, installation des d√©pendances..."
    npm install
    if [ $? -eq 0 ]; then
        print_success "D√©pendances install√©es avec succ√®s"
    else
        print_error "√âchec de l'installation des d√©pendances"
        exit 1
    fi
else
    print_success "‚úì node_modules existe"
fi

# V√©rifier la configuration Supabase
print_status "V√©rification de la configuration Supabase..."

if [ ! -f ".env.local" ] && [ ! -f ".env" ]; then
    print_warning "Fichier .env manquant, v√©rifiez votre configuration Supabase"
fi

# V√©rifier la structure des migrations
print_status "V√©rification des migrations Supabase..."

if [ -d "supabase/migrations" ]; then
    MIGRATION_COUNT=$(ls supabase/migrations/*.sql 2>/dev/null | wc -l)
    print_success "‚úì $MIGRATION_COUNT migrations trouv√©es"
else
    print_warning "Dossier supabase/migrations manquant"
fi

# Test de compilation TypeScript
print_status "Test de compilation TypeScript..."

if command -v npx &> /dev/null; then
    npx tsc --noEmit --skipLibCheck
    if [ $? -eq 0 ]; then
        print_success "‚úì Compilation TypeScript r√©ussie"
    else
        print_warning "Erreurs de compilation TypeScript d√©tect√©es"
    fi
else
    print_warning "npx non disponible, impossible de tester la compilation"
fi

# Instructions pour l'utilisateur
echo ""
echo "üéØ √âTAPES SUIVANTES POUR R√âSOUDRE L'ERREUR 406:"
echo "=============================================="
echo ""
echo "1. üìä EX√âCUTER LE SCRIPT SQL DE MIGRATION:"
echo "   - Connectez-vous √† https://app.supabase.com"
echo "   - S√©lectionnez votre projet SANTE.GA"
echo "   - Allez dans SQL Editor"
echo "   - Copiez le contenu de fix_professional_profiles_rls.sql"
echo "   - Ex√©cutez le script (Ctrl+Enter)"
echo ""
echo "2. üöÄ D√âMARRER L'APPLICATION:"
echo "   npm run dev"
echo ""
echo "3. üß™ TESTER LE DASHBOARD PROFESSIONNEL:"
echo "   - Ouvrez http://localhost:8081/dashboard/professional"
echo "   - Connectez-vous avec un compte professionnel"
echo "   - V√©rifiez qu'aucune erreur 406 n'appara√Æt dans la console"
echo ""
echo "4. üîç V√âRIFICATIONS DANS LA CONSOLE DU NAVIGATEUR:"
echo "   - Ouvrez les DevTools (F12)"
echo "   - Allez dans l'onglet Console"
echo "   - Rechargez la page"
echo "   - Aucune erreur 406 ne devrait appara√Ætre"
echo "   - Maximum 3 tentatives de chargement du profil"
echo ""

# V√©rifier si l'application est d√©j√† en cours d'ex√©cution
if lsof -Pi :8081 -sTCP:LISTEN -t >/dev/null 2>&1; then
    print_warning "L'application semble d√©j√† en cours d'ex√©cution sur le port 8081"
    echo "Vous pouvez tester directement: http://localhost:8081/dashboard/professional"
else
    print_status "Pour d√©marrer l'application, ex√©cutez: npm run dev"
fi

echo ""
echo "‚úÖ R√âSUM√â DE LA CORRECTION:"
echo "=========================="
echo "‚Ä¢ Script SQL de migration cr√©√©: fix_professional_profiles_rls.sql"
echo "‚Ä¢ Hook useProfessionalProfile cr√©√©: src/hooks/useProfessionalProfile.ts"
echo "‚Ä¢ Dashboard mis √† jour: src/pages/DashboardProfessional.tsx"
echo "‚Ä¢ Gestion des erreurs avec backoff exponentiel"
echo "‚Ä¢ Compatibilit√© avec les tables 'professionals' et 'professional_profiles'"
echo "‚Ä¢ Interface utilisateur am√©lior√©e avec √©tats de chargement"
echo ""
echo "üéâ La correction est pr√™te √† √™tre d√©ploy√©e !"
